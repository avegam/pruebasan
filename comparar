import pandas as pd

def parse_dict(row_str):
    elements = row_str.split("],")
    result = {}
    for e in elements:
        e = e.strip().strip(",").strip("[]")
        if e:
            parts = e.split(",")
            key = parts[0].strip('"').strip("'")
            values = list(map(int, parts[1:]))
            result[key] = values
    return result

def compare_dicts_detalle(dict1, dict2):
    coincidencias = {}
    faltantes = {}
    sobrantes = {}

    total_coincidencias_valores = 0
    total_faltantes = 0
    total_sobrantes = 0

    claves_union = set(dict1.keys()).union(dict2.keys())

    for clave in claves_union:
        valores1 = dict1.get(clave, [])
        valores2 = dict2.get(clave, [])

        coinciden = sorted([v for v in valores1 if v in valores2])
        faltan = sorted([v for v in valores1 if v not in valores2])
        sobran = sorted([v for v in valores2 if v not in valores1])

        if coinciden:
            coincidencias[clave] = coinciden
            total_coincidencias_valores += len(coinciden)
        if faltan:
            faltantes[clave] = faltan
            total_faltantes += len(faltan)
        if sobran:
            sobrantes[clave] = sobran
            total_sobrantes += len(sobran)

    return {
        "coincidencias": coincidencias,
        "faltantes": faltantes,
        "sobrantes": sobrantes,
        "total_coinciden": total_coincidencias_valores,
        "total_faltan": total_faltantes,
        "total_sobran": total_sobrantes
    }

# Cargar el archivo original
df = pd.read_excel("datos.xlsx")

# Preparar lista para resultados nuevos
resultados = []

for idx, row in df.iterrows():
    dict1 = parse_dict(str(row.iloc[0]))
    dict2 = parse_dict(str(row.iloc[1]))
    comparacion = compare_dicts_detalle(dict1, dict2)

    fila_resultado = row.to_dict()  # Copia los datos originales
    fila_resultado.update({
        "Total coincidencias de valores": comparacion["total_coinciden"],
        "Total valores faltantes en dict2": comparacion["total_faltan"],
        "Total valores sobrantes en dict2": comparacion["total_sobran"],
        "Detalle coincidencias por clave": str(comparacion["coincidencias"]),
        "Detalle faltantes por clave": str(comparacion["faltantes"]),
        "Detalle sobrantes por clave": str(comparacion["sobrantes"]),
    })

    resultados.append(fila_resultado)

# Guardar en nuevo Excel
pd.DataFrame(resultados).to_excel("resultados.xlsx", index=False)
