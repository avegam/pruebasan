import pandas as pd
import ast

def analizar_diferencias(dict_base, dict_comparado):
    claves_base = set(dict_base.keys())
    claves_comparado = set(dict_comparado.keys())

    claves_sobrantes = claves_comparado - claves_base
    claves_faltantes = claves_base - claves_comparado

    detalles_sobrantes = {}
    detalles_faltantes = {}

    # Valores de más
    for clave in claves_sobrantes:
        detalles_sobrantes[clave] = dict_comparado.get(clave, [])

    # Valores que faltan
    for clave in claves_faltantes:
        detalles_faltantes[clave] = dict_base.get(clave, [])

    # Cantidades
    cantidad_sobrantes = sum(len(v) for v in detalles_sobrantes.values())
    cantidad_faltantes = sum(len(v) for v in detalles_faltantes.values())

    return {
        "Claves_Valor_DeMas": str(detalles_sobrantes),
        "Cantidad_Valor_DeMas": cantidad_sobrantes,
        "Claves_Valor_Faltantes": str(detalles_faltantes),
        "Cantidad_Valor_Faltantes": cantidad_faltantes
    }

# Leer el Excel
archivo = "datos.xlsx"  # Cambiá esto al nombre de tu archivo
df = pd.read_excel(archivo)

# Convertimos los strings de la columna "Datos" a diccionarios
df["Datos_dic"] = df["Datos"].apply(lambda x: ast.literal_eval(x) if isinstance(x, str) else {})

# Usamos el primer diccionario como base
dict_base = df["Datos_dic"].iloc[0]

# Procesamos fila por fila
resultados = df["Datos_dic"].apply(lambda dic: analizar_diferencias(dict_base, dic))

# Convertimos los resultados a columnas separadas
resultados_df = pd.DataFrame(resultados.tolist())

# Unimos los resultados al dataframe original
df = pd.concat([df, resultados_df], axis=1)

# Guardamos el resultado
df.to_excel("resultado_analisis.xlsx", index=False)
